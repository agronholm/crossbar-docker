FROM debian:jessie

ARG CROSSBAR_VERSION
ARG PYPY_VERSION=5.7.1
ARG PYPY_SHA256SUM=2abaa54d88c9b70b64c37083e7e430a1d3a8f78f8de92e484a988b7aca1e50a7

# install dependencies and Crossbar.io
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
               ca-certificates \
               curl \
               expat \
               build-essential \
               libssl-dev

# install PyPy3 from upstream tarball
RUN curl -L --output /tmp/pypy.tar.bz2 https://bitbucket.org/pypy/pypy/downloads/pypy3-v${PYPY_VERSION}-linux64.tar.bz2 \
    && echo "$PYPY_SHA256SUM /tmp/pypy.tar.bz2" | sha256sum -c \
    && tar -xjC /usr/local --strip-components=1 -f /tmp/pypy.tar.bz2

# install Crossbar.io from PyPI
ENV PYTHONDONTWRITEBYTECODE 1
RUN pypy3 -m ensurepip \
    && pypy3 -m pip install --no-cache-dir --no-compile crossbar==${CROSSBAR_VERSION}


#
# Final image
#

FROM debian:jessie-slim
MAINTAINER The Crossbar.io Project <support@crossbario.com>

# Metadata
ARG BUILD_DATE
ARG CROSSBAR_VCS_REF
ARG CROSSBAR_VERSION

# Metadata labeling
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="Crossbar.io Starter Template" \
      org.label-schema.description="Quickstart template for application development with Crossbar.io" \
      org.label-schema.url="http://crossbar.io" \
      org.label-schema.vcs-ref=$CROSSBAR_VCS_REF \
      org.label-schema.vcs-url="https://github.com/crossbario/crossbar" \
      org.label-schema.vendor="The Crossbar.io Project" \
      org.label-schema.version=$CROSSBAR_VERSION \
      org.label-schema.schema-version="1.0"

# Application home
ENV HOME /node
ENV DEBIAN_FRONTEND noninteractive
ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
            libexpat1 \
            libffi6 \
            libssl1.0.0 \
    && apt-get clean

# add our user and group
RUN adduser --system --group --uid 242 -c "Crossbar.io Service" --home /node crossbar

# copy PyPy3 and all installed packages
COPY --from=0 /usr/local /usr/local/

# test if everything installed properly
RUN PYTHONDONTWRITEBYTECODE=1 crossbar version

# initialize a Crossbar.io node
COPY ./node/ /node/
RUN chown -R crossbar:crossbar /node

# make /node a volume to allow external configuration
VOLUME /node

# set the Crossbar.io node directory as working directory
WORKDIR /node

# run under this user, and expose default port
USER crossbar
EXPOSE 8080

# entrypoint for the Docker image is the Crossbar.io executable
ENTRYPOINT ["crossbar", "start"]
